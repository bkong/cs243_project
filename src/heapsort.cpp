#include <iostream>
#include <stdlib.h>

using namespace std;

void heapsort(int n, int* ra) {
    int i, j;
    int ir = n;
    int l = (n >> 1) + 1;
    int rra;

    while (true) {
	if (l > 1) {
	    rra = ra[--l];
	} else {
	    rra = ra[ir];
	    ra[ir] = ra[1];
	    if (--ir == 1) {
		ra[1] = rra;
		return;
	    }
	}
	i = l;
	j = l << 1;
	while (j <= ir) {
	    if (j < ir && ra[j] < ra[j+1]) { ++j; }
	    if (rra < ra[j]) {
		ra[i] = ra[j];
		j += (i = j);
	    } else {
		j = ir + 1;
	    }
	}
	ra[i] = rra;
    }
}

const long long A = 16807;
const long long M = 2147483647;
long long X;

void isrand(int r) {
    X = r;
}

int irand() {
	X = (A * X) % M;
	return (int) X;
}


int main(int argc, char *argv[]) {
    int N = 1000;
    int ary[] = {487, 121, 773, 668, 632, 918, 172, 470, 679, 845, 881, 808, 895, 505, 92, 357, 313, 985, 869, 410, 315, 154, 142, 279, 347, 741, 143, 277, 631, 796, 198, 32, 371, 766, 69, 61, 578, 494, 771, 402, 488, 920, 969, 119, 765, 458, 185, 89, 21, 522, 446, 54, 910, 955, 807, 389, 49, 42, 118, 325, 210, 981, 607, 725, 752, 192, 635, 993, 62, 900, 475, 71, 586, 824, 375, 784, 198, 842, 38, 323, 823, 254, 871, 259, 665, 942, 42, 246, 77, 500, 541, 934, 25, 393, 460, 47, 514, 682, 997, 377, 62, 101, 170, 518, 140, 264, 665, 432, 222, 1, 242, 818, 17, 794, 996, 241, 965, 591, 506, 348, 712, 84, 333, 645, 808, 579, 939, 648, 319, 879, 693, 668, 978, 836, 264, 803, 460, 793, 320, 760, 174, 388, 73, 290, 287, 22, 193, 179, 60, 553, 79, 641, 772, 94, 451, 67, 564, 922, 751, 156, 428, 773, 434, 338, 229, 663, 901, 93, 196, 255, 51, 970, 114, 610, 308, 192, 220, 777, 443, 801, 723, 210, 638, 322, 906, 180, 401, 470, 703, 886, 443, 915, 12, 913, 306, 960, 745, 17, 595, 22, 684, 113, 190, 319, 958, 529, 780, 185, 652, 428, 11, 594, 511, 215, 60, 449, 759, 391, 91, 451, 878, 562, 162, 628, 507, 386, 388, 946, 787, 975, 450, 694, 307, 493, 818, 341, 833, 522, 324, 450, 483, 879, 253, 988, 707, 158, 648, 439, 373, 51, 279, 954, 59, 231, 410, 445, 316, 143, 862, 208, 530, 925, 112, 807, 186, 871, 229, 659, 236, 652, 780, 712, 78, 24, 311, 700, 368, 543, 761, 866, 443, 346, 86, 414, 410, 189, 818, 119, 916, 29, 520, 957, 393, 757, 727, 878, 340, 714, 416, 22, 718, 479, 880, 513, 549, 116, 785, 35, 837, 592, 438, 525, 458, 724, 61, 709, 360, 471, 629, 247, 266, 676, 896, 837, 656, 458, 83, 340, 880, 318, 623, 626, 907, 132, 800, 893, 248, 215, 136, 732, 497, 485, 962, 190, 877, 169, 521, 443, 97, 902, 802, 862, 868, 338, 731, 816, 479, 677, 793, 705, 797, 800, 506, 211, 37, 341, 380, 7, 850, 660, 883, 478, 578, 358, 827, 140, 431, 758, 587, 650, 152, 201, 912, 872, 935, 820, 847, 306, 492, 333, 640, 952, 458, 957, 99, 381, 271, 217, 4, 260, 883, 779, 529, 782, 992, 983, 46, 782, 34, 330, 183, 114, 383, 976, 124, 611, 248, 611, 472, 42, 13, 446, 788, 134, 241, 729, 415, 97, 386, 387, 440, 71, 582, 3, 869, 395, 294, 604, 72, 225, 969, 111, 525, 587, 608, 259, 78, 339, 753, 902, 713, 909, 949, 507, 528, 178, 893, 177, 947, 755, 716, 119, 87, 202, 644, 926, 967, 83, 472, 291, 985, 3, 990, 970, 220, 765, 292, 575, 960, 297, 16, 903, 85, 942, 761, 88, 608, 26, 415, 883, 888, 739, 253, 837, 836, 808, 518, 914, 597, 321, 544, 430, 666, 757, 522, 16, 883, 714, 205, 417, 534, 151, 523, 241, 874, 584, 180, 734, 9, 486, 232, 2, 690, 952, 708, 278, 68, 145, 471, 401, 178, 218, 849, 140, 459, 771, 553, 626, 218, 977, 354, 603, 922, 708, 300, 212, 992, 428, 613, 225, 797, 111, 736, 213, 828, 276, 167, 240, 775, 387, 798, 460, 259, 267, 971, 130, 341, 274, 30, 785, 509, 22, 229, 496, 165, 845, 197, 43, 322, 960, 263, 25, 221, 679, 253, 79, 148, 425, 812, 954, 246, 693, 377, 815, 436, 584, 767, 738, 424, 82, 625, 712, 314, 790, 880, 148, 647, 571, 643, 116, 559, 954, 35, 224, 660, 1, 922, 33, 256, 803, 605, 883, 887, 424, 780, 253, 765, 143, 695, 517, 11, 437, 416, 496, 29, 615, 427, 499, 289, 579, 170, 349, 146, 511, 554, 764, 634, 691, 20, 960, 806, 932, 167, 669, 885, 692, 187, 675, 821, 385, 33, 142, 237, 911, 613, 474, 590, 172, 957, 389, 222, 195, 292, 96, 127, 968, 28, 428, 448, 116, 286, 175, 135, 598, 409, 160, 544, 205, 448, 559, 162, 296, 97, 893, 574, 121, 523, 361, 138, 248, 181, 205, 659, 249, 841, 118, 271, 385, 29, 715, 707, 58, 39, 764, 373, 12, 687, 846, 876, 319, 897, 139, 862, 276, 549, 747, 616, 176, 554, 390, 589, 307, 320, 1, 57, 943, 203, 497, 635, 56, 509, 954, 862, 945, 922, 861, 24, 355, 257, 226, 131, 924, 8, 317, 841, 711, 947, 666, 110, 447, 345, 659, 444, 880, 470, 994, 450, 73, 866, 765, 350, 699, 754, 83, 66, 34, 29, 357, 243, 55, 235, 691, 488, 784, 508, 573, 202, 779, 202, 890, 254, 802, 176, 77, 955, 184, 901, 495, 892, 409, 256, 450, 519, 311, 26, 329, 246, 726, 204, 524, 580, 223, 652, 366, 945, 771, 378, 861, 379, 169, 669, 786, 940, 148, 116, 714, 394, 309, 188, 275, 854, 101, 866, 780, 658, 5, 202, 897, 353, 981, 489, 456, 410, 717, 127, 853, 91, 683, 874, 658, 180, 288, 10, 630, 664, 966, 696, 552, 314, 285, 898, 896, 984, 489, 529, 895, 821, 268, 658, 921, 14, 424, 447, 808, 35, 460, 332, 106, 488, 974, 656, 425, 75, 291, 752, 436, 451, 927, 995, 526, 520, 24, 126, 764, 606, 960, 966, 974, 393, 74, 240, 474, 32, 549, 380, 136, 463, 940, 234, 135, 904, 121, 397, 574, 73, 917, 400, 932, 506, 972, 453, 866, 84, 583, 72, 956, 391, 306, 919, 613, 193, 416, 685, 786, 777, 99, 245, 745, 371, 997, 399, 288, 208, 605, 544, 317, 23, 696, 399, 687, 24, 519, 439, 270, 13, 426, 959, 79, 170, 160, 723, 82, 228, 69, 401, 824, 487, 24, 70, 195, 116, 238, 892, 476, 789, 204, 600, 563, 391, 105, 989, 694, 806, 504, 148, 478, 428, 324, 403, 824, 582, 700, 363, 857, 701, 749, 790, 926, 433, 362};

    heapsort(N, ary);

	cout << "Need to add test sort!" << endl;
    cout << ary[N] << endl;
    return(0);
}


